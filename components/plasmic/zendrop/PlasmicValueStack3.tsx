// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4UKWsAMfUC1kEuLgBvknC
// Component: n61_wHDUo9H

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantsjZPl8KLomlJe } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: jZPl8KLomlJe/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_zendrop.module.css"; // plasmic-import: 4UKWsAMfUC1kEuLgBvknC/projectcss
import sty from "./PlasmicValueStack3.module.css"; // plasmic-import: n61_wHDUo9H/css

createPlasmicElementProxy;

export type PlasmicValueStack3__VariantMembers = {};
export type PlasmicValueStack3__VariantsArgs = {};
type VariantPropType = keyof PlasmicValueStack3__VariantsArgs;
export const PlasmicValueStack3__VariantProps = new Array<VariantPropType>();

export type PlasmicValueStack3__ArgsType = {
  children?: React.ReactNode;
  slot?: React.ReactNode;
  slot2?: React.ReactNode;
  slot3?: React.ReactNode;
  children2?: React.ReactNode;
  slot4?: React.ReactNode;
  slot5?: React.ReactNode;
  slot6?: React.ReactNode;
  children3?: React.ReactNode;
  slot7?: React.ReactNode;
  slot8?: React.ReactNode;
  slot9?: React.ReactNode;
  children4?: React.ReactNode;
  slot10?: React.ReactNode;
  slot11?: React.ReactNode;
  slot12?: React.ReactNode;
  children5?: React.ReactNode;
  slot13?: React.ReactNode;
  slot14?: React.ReactNode;
  slot15?: React.ReactNode;
  children6?: React.ReactNode;
  slot16?: React.ReactNode;
  slot17?: React.ReactNode;
  slot18?: React.ReactNode;
  children7?: React.ReactNode;
  slot19?: React.ReactNode;
  slot20?: React.ReactNode;
  slot21?: React.ReactNode;
  children8?: React.ReactNode;
  slot22?: React.ReactNode;
  slot23?: React.ReactNode;
  slot24?: React.ReactNode;
  children9?: React.ReactNode;
  slot25?: React.ReactNode;
  slot26?: React.ReactNode;
  slot27?: React.ReactNode;
  children10?: React.ReactNode;
  slot28?: React.ReactNode;
  slot29?: React.ReactNode;
  slot30?: React.ReactNode;
  children11?: React.ReactNode;
  slot31?: React.ReactNode;
  slot32?: React.ReactNode;
  slot33?: React.ReactNode;
  children13?: React.ReactNode;
  slot37?: React.ReactNode;
  slot38?: React.ReactNode;
  slot39?: React.ReactNode;
  children17?: React.ReactNode;
  slot49?: React.ReactNode;
  slot50?: React.ReactNode;
  slot51?: React.ReactNode;
  children18?: React.ReactNode;
  slot52?: React.ReactNode;
  slot53?: React.ReactNode;
  slot54?: React.ReactNode;
  children19?: React.ReactNode;
  slot55?: React.ReactNode;
  slot56?: React.ReactNode;
  slot57?: React.ReactNode;
  children20?: React.ReactNode;
  slot58?: React.ReactNode;
  slot59?: React.ReactNode;
  slot60?: React.ReactNode;
  children21?: React.ReactNode;
  slot61?: React.ReactNode;
  slot62?: React.ReactNode;
  slot63?: React.ReactNode;
  children22?: React.ReactNode;
  slot64?: React.ReactNode;
  slot65?: React.ReactNode;
  slot66?: React.ReactNode;
  children23?: React.ReactNode;
  slot67?: React.ReactNode;
  slot68?: React.ReactNode;
  slot69?: React.ReactNode;
  children24?: React.ReactNode;
  slot70?: React.ReactNode;
  slot71?: React.ReactNode;
  slot72?: React.ReactNode;
  children25?: React.ReactNode;
  slot73?: React.ReactNode;
  slot74?: React.ReactNode;
  slot75?: React.ReactNode;
  children26?: React.ReactNode;
  slot76?: React.ReactNode;
  slot77?: React.ReactNode;
  slot78?: React.ReactNode;
};
type ArgPropType = keyof PlasmicValueStack3__ArgsType;
export const PlasmicValueStack3__ArgProps = new Array<ArgPropType>(
  "children",
  "slot",
  "slot2",
  "slot3",
  "children2",
  "slot4",
  "slot5",
  "slot6",
  "children3",
  "slot7",
  "slot8",
  "slot9",
  "children4",
  "slot10",
  "slot11",
  "slot12",
  "children5",
  "slot13",
  "slot14",
  "slot15",
  "children6",
  "slot16",
  "slot17",
  "slot18",
  "children7",
  "slot19",
  "slot20",
  "slot21",
  "children8",
  "slot22",
  "slot23",
  "slot24",
  "children9",
  "slot25",
  "slot26",
  "slot27",
  "children10",
  "slot28",
  "slot29",
  "slot30",
  "children11",
  "slot31",
  "slot32",
  "slot33",
  "children13",
  "slot37",
  "slot38",
  "slot39",
  "children17",
  "slot49",
  "slot50",
  "slot51",
  "children18",
  "slot52",
  "slot53",
  "slot54",
  "children19",
  "slot55",
  "slot56",
  "slot57",
  "children20",
  "slot58",
  "slot59",
  "slot60",
  "children21",
  "slot61",
  "slot62",
  "slot63",
  "children22",
  "slot64",
  "slot65",
  "slot66",
  "children23",
  "slot67",
  "slot68",
  "slot69",
  "children24",
  "slot70",
  "slot71",
  "slot72",
  "children25",
  "slot73",
  "slot74",
  "slot75",
  "children26",
  "slot76",
  "slot77",
  "slot78"
);

export type PlasmicValueStack3__OverridesType = {
  root?: p.Flex<"div">;
  desktop?: p.Flex<"div">;
  mobile?: p.Flex<"div">;
};

export interface DefaultValueStack3Props {
  children?: React.ReactNode;
  slot?: React.ReactNode;
  slot2?: React.ReactNode;
  slot3?: React.ReactNode;
  children2?: React.ReactNode;
  slot4?: React.ReactNode;
  slot5?: React.ReactNode;
  slot6?: React.ReactNode;
  children3?: React.ReactNode;
  slot7?: React.ReactNode;
  slot8?: React.ReactNode;
  slot9?: React.ReactNode;
  children4?: React.ReactNode;
  slot10?: React.ReactNode;
  slot11?: React.ReactNode;
  slot12?: React.ReactNode;
  children5?: React.ReactNode;
  slot13?: React.ReactNode;
  slot14?: React.ReactNode;
  slot15?: React.ReactNode;
  children6?: React.ReactNode;
  slot16?: React.ReactNode;
  slot17?: React.ReactNode;
  slot18?: React.ReactNode;
  children7?: React.ReactNode;
  slot19?: React.ReactNode;
  slot20?: React.ReactNode;
  slot21?: React.ReactNode;
  children8?: React.ReactNode;
  slot22?: React.ReactNode;
  slot23?: React.ReactNode;
  slot24?: React.ReactNode;
  children9?: React.ReactNode;
  slot25?: React.ReactNode;
  slot26?: React.ReactNode;
  slot27?: React.ReactNode;
  children10?: React.ReactNode;
  slot28?: React.ReactNode;
  slot29?: React.ReactNode;
  slot30?: React.ReactNode;
  children11?: React.ReactNode;
  slot31?: React.ReactNode;
  slot32?: React.ReactNode;
  slot33?: React.ReactNode;
  children13?: React.ReactNode;
  slot37?: React.ReactNode;
  slot38?: React.ReactNode;
  slot39?: React.ReactNode;
  children17?: React.ReactNode;
  slot49?: React.ReactNode;
  slot50?: React.ReactNode;
  slot51?: React.ReactNode;
  children18?: React.ReactNode;
  slot52?: React.ReactNode;
  slot53?: React.ReactNode;
  slot54?: React.ReactNode;
  children19?: React.ReactNode;
  slot55?: React.ReactNode;
  slot56?: React.ReactNode;
  slot57?: React.ReactNode;
  children20?: React.ReactNode;
  slot58?: React.ReactNode;
  slot59?: React.ReactNode;
  slot60?: React.ReactNode;
  children21?: React.ReactNode;
  slot61?: React.ReactNode;
  slot62?: React.ReactNode;
  slot63?: React.ReactNode;
  children22?: React.ReactNode;
  slot64?: React.ReactNode;
  slot65?: React.ReactNode;
  slot66?: React.ReactNode;
  children23?: React.ReactNode;
  slot67?: React.ReactNode;
  slot68?: React.ReactNode;
  slot69?: React.ReactNode;
  children24?: React.ReactNode;
  slot70?: React.ReactNode;
  slot71?: React.ReactNode;
  slot72?: React.ReactNode;
  children25?: React.ReactNode;
  slot73?: React.ReactNode;
  slot74?: React.ReactNode;
  slot75?: React.ReactNode;
  children26?: React.ReactNode;
  slot76?: React.ReactNode;
  slot77?: React.ReactNode;
  slot78?: React.ReactNode;
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicValueStack3__RenderFunc(props: {
  variants: PlasmicValueStack3__VariantsArgs;
  args: PlasmicValueStack3__ArgsType;
  overrides: PlasmicValueStack3__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjZPl8KLomlJe()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
        <div
          data-plasmic-name={"desktop"}
          data-plasmic-override={overrides.desktop}
          className={classNames(projectcss.all, sty.desktop)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__xdygi)}>
            <div className={classNames(projectcss.all, sty.freeBox___3Hh5K)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___7QLxi)}
                >
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hfih3)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__dVmNy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__j9Tcu)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__p896G
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children,
                      className: classNames(sty.slotTargetChildren)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__otXr5
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__ccmpW)}>
                <div className={classNames(projectcss.all, sty.freeBox__qbs7S)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yx3B)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__brgam
                    )}
                  >
                    {"365-Day Zendrop PLUS App Deal:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__hvgsZ)}>
                <div className={classNames(projectcss.all, sty.freeBox__uZ2JP)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cJpU)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot,
                      className: classNames(sty.slotTargetSlot)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__iQtZc)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__afn29
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xY41
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot2
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__cI2T5)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__rHvop)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__s7T7U)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot3
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ubiyp)}>
            <div className={classNames(projectcss.all, sty.freeBox__aqkkF)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__yDb7A)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__cUcec)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___52RFs)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bMzk)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oa6V
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children2,
                      className: classNames(sty.slotTargetChildren2)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hffH
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__zHn2B)}>
                <div className={classNames(projectcss.all, sty.freeBox__jmMpM)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___4N7Kc)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kBaFp
                    )}
                  >
                    {"$197 In Order Fulfillment Credits:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__uRio)}>
                <div className={classNames(projectcss.all, sty.freeBox__vPqHb)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kiM9F)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: ~$500",
                      value: args.slot4,
                      className: classNames(sty.slotTargetSlot4)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pyZy8)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__sWZc
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8HRa8
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot5
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___57H1O)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__fGsAd)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__m3JB7)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot6
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__v9X8)}>
            <div className={classNames(projectcss.all, sty.freeBox__nFdOq)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pCp1K)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oi1Nm)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__sJoDn)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1KeG)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ftfom
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children3,
                      className: classNames(sty.slotTargetChildren3)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4MCdV
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__oGpoK)}>
                <div className={classNames(projectcss.all, sty.freeBox__rklT9)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gbSH)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2K2Fh
                    )}
                  >
                    {"Exclusive Discord Community:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__lpAfy)}>
                <div className={classNames(projectcss.all, sty.freeBox__tXxwT)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ql58)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot7,
                      className: classNames(sty.slotTargetSlot7)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__txl0K)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___7Vvk
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__u9M0Y
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot8
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___9RrXn)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___13NEq)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tf7Ve)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot9
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__wiZh)}>
            <div className={classNames(projectcss.all, sty.freeBox__e6KQr)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__un6Fe)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lt7LU)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ebKE)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___73Jbv)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__a0R49
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children4,
                      className: classNames(sty.slotTargetChildren4)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__umaVa
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__frYr)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___99Pr3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fkCEv)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ilFkW
                    )}
                  >
                    {"Advanced TikTok & Facebook Ads Training:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___8BabY)}>
                <div className={classNames(projectcss.all, sty.freeBox__uQgUs)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lSjy)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $9,997",
                      value: args.slot10,
                      className: classNames(sty.slotTargetSlot10)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qbsPy)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__l5Dm
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zI6Lw
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot11
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___3Nhyr)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__b2Oco)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___27Zi)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot12
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___0MHi9)}>
            <div className={classNames(projectcss.all, sty.freeBox__bun)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__xkbNe)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__aoIk)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__dCimt)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7X1Tl)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rjo6S
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children5,
                      className: classNames(sty.slotTargetChildren5)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ihi6F
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__schwI)}>
                <div className={classNames(projectcss.all, sty.freeBox__jBbFp)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ofkIe)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4VWax
                    )}
                  >
                    {"Trending Products Finder:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__egep)}>
                <div className={classNames(projectcss.all, sty.freeBox__qm53A)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__btRTd)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot13,
                      className: classNames(sty.slotTargetSlot13)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ffGWo)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__z8Sjp
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7PAhj
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot14
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qlzIa)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___4NvjD)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__moWeD)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot15
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__uoe1V)}>
            <div className={classNames(projectcss.all, sty.freeBox___5M6VO)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___8RSAq)}
                >
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__j0L2)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__vunQo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rCwV8)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vJpPq
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children6,
                      className: classNames(sty.slotTargetChildren6)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0XxCf
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox___0LmiF)}>
                <div className={classNames(projectcss.all, sty.freeBox__hn4Js)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wox3S)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sCa6S
                    )}
                  >
                    {"Automated Order Fulfillment:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__e5Ax)}>
                <div className={classNames(projectcss.all, sty.freeBox__mxwfR)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0WKtc)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $200",
                      value: args.slot16,
                      className: classNames(sty.slotTargetSlot16)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bdaZh)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ljc4S
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8Tu5V
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot17
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qf3Vk)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___7Td5W)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xeatf)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot18
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__rdpDr)}>
            <div className={classNames(projectcss.all, sty.freeBox__dypZ)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___8D62U)}
                >
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__foGys)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__aAt1E)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lWs53)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q8Qqa
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children7,
                      className: classNames(sty.slotTargetChildren7)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yDmdg
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__vbGiK)}>
                <div className={classNames(projectcss.all, sty.freeBox__p7CI5)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__amv6Y)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qo8La
                    )}
                  >
                    {"Custom Branded Shipping Inserts:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xVedc)}>
                <div className={classNames(projectcss.all, sty.freeBox__jQblq)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zikqk)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $400",
                      value: args.slot19,
                      className: classNames(sty.slotTargetSlot19)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__sHrk1)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__uBhG9
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d9CVx
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot20
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__p4BB)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__fTApr)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tCL2)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot21
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__aeXfp)} />

          <div className={classNames(projectcss.all, sty.freeBox__kZhbP)}>
            <div className={classNames(projectcss.all, sty.freeBox__wmwVy)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__uklGa)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___02N5R)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___5QulC)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___78W1M)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pyu2K
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children8,
                      className: classNames(sty.slotTargetChildren8)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1DxM1
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__hrgE2)}>
                <div className={classNames(projectcss.all, sty.freeBox__skAm5)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__yJvVr)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j6Cx3
                    )}
                  >
                    {"TOTAL PRICE:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__teu2L)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4AKdu)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__y8Lcl)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "$11,334",
                      value: args.slot22,
                      className: classNames(sty.slotTargetSlot22)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__hkb8Y)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__zodje
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yoPYq
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot23
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__pHwri)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__tYahN)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yfoHl)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot24
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___09Nv5)}>
            <div className={classNames(projectcss.all, sty.freeBox__qM912)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__sf9ES)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__um8Wz)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__tcvJv)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6Qcur)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cKcbn
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children9,
                      className: classNames(sty.slotTargetChildren9)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__isr0F
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__ece6Z)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___2Qtxj)}
                >
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__xbnxd)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Qwts
                    )}
                  >
                    {"LIMITED-TIME OFFER:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__vqiWu)}>
                <div className={classNames(projectcss.all, sty.freeBox__mxPPo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__e5U7O)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "$0",
                      value: args.slot25,
                      className: classNames(sty.slotTargetSlot25)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___7WuOa)}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__wkcg
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jFKbo
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot26
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___9IMOn)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__tCqj9)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fIhFb)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot27
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__z3EA)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fvcsF
              )}
            >
              {"\ud83d\udc49  CLAIM OFFER  \ud83d\udc48"}
            </div>
          </div>
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
        <div
          data-plasmic-name={"mobile"}
          data-plasmic-override={overrides.mobile}
          className={classNames(projectcss.all, sty.mobile)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__hy6We)}>
            <div className={classNames(projectcss.all, sty.freeBox___8Wr9)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox___6X3T)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__qvFk9)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___0MAoj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mXpCs)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qugrJ
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children10,
                      className: classNames(sty.slotTargetChildren10)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jhKl6
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__r5DxV)}>
                <div className={classNames(projectcss.all, sty.freeBox__ywZcH)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qU0I1)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o5Vpr
                    )}
                  >
                    {"365-Day Zendrop \nPLUS App Deal:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ue3EP)}>
                <div className={classNames(projectcss.all, sty.freeBox__nmTHp)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gRj4F)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot28,
                      className: classNames(sty.slotTargetSlot28)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pExjv)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___2VdVk
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yMYaK
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot29
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___5TA8)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__do2Vp)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6TFBu)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot30
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__b5NbQ)}>
            <div className={classNames(projectcss.all, sty.freeBox___6IWzq)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___1GJhH)}
                >
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___1XDwr)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__lfRV)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lkG6)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3BqVg
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children20,
                      className: classNames(sty.slotTargetChildren20)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xVWc5
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__gvawR)}>
                <div className={classNames(projectcss.all, sty.freeBox__d75I)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wlK3G)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xncH6
                    )}
                  >
                    {"$197 In Order Fulfillment Credits:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___4NxRw)}>
                <div className={classNames(projectcss.all, sty.freeBox__zz8Em)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__o9DfH)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $500",
                      value: args.slot58,
                      className: classNames(sty.slotTargetSlot58)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__a7Z3N)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___5LAt4
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eeRNq
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot59
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__nbt81)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__dGUm)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kEyeJ)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot60
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ht8Vx)}>
            <div className={classNames(projectcss.all, sty.freeBox___6SxKd)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ppSwX)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__np6Mj)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___2VjrX)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__piElz)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uGcGr
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children21,
                      className: classNames(sty.slotTargetChildren21)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ishD1
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__zepIy)}>
                <div className={classNames(projectcss.all, sty.freeBox__arD1W)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hqa2G)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2GIrV
                    )}
                  >
                    {"Exclusive Discord Community:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___4NxBr)}>
                <div className={classNames(projectcss.all, sty.freeBox__qLaIe)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hnaW9)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot61,
                      className: classNames(sty.slotTargetSlot61)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__wE7W)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__uTnz
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qYpLo
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot62
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__p9GH)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__yFaPd)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__divWf)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot63
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__eYucl)}>
            <div className={classNames(projectcss.all, sty.freeBox__alDiY)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__coRgL)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___04BM8)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__u5Pv)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pOhq)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vczH6
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children22,
                      className: classNames(sty.slotTargetChildren22)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pLj2P
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__nm1Ve)}>
                <div className={classNames(projectcss.all, sty.freeBox___66Iz)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dyTS)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hyrvk
                    )}
                  >
                    {"Advanced TikTok & Facebook Ads Training:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__exWAz)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5OBnx)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ljXk2)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $9,997",
                      value: args.slot64,
                      className: classNames(sty.slotTargetSlot64)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qImQ)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__epXbn
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4HIRi
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot65
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gWww2)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__cUys8)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nJeEk)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot66
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__yPga)}>
            <div className={classNames(projectcss.all, sty.freeBox__dwkKs)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__rykXo)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kXp5O)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__cCnuS)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__amYad)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ptTip
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children23,
                      className: classNames(sty.slotTargetChildren23)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r5W2Y
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__mFrNj)}>
                <div className={classNames(projectcss.all, sty.freeBox__jo78Z)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cyoay)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mpW7
                    )}
                  >
                    {"Trending Products Finder:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__x8DzI)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___0Y5Ss)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pOsfk)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $79",
                      value: args.slot67,
                      className: classNames(sty.slotTargetSlot67)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__eehpu)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jhW5E
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ey8Al
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot68
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__ystK8)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__di4Pu)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wLr8M)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot69
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__oqRca)}>
            <div className={classNames(projectcss.all, sty.freeBox___06Ipf)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__hcTr4)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___0Gu7Y)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__uE8N)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__twMpG)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0URud
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children24,
                      className: classNames(sty.slotTargetChildren24)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Fby
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__dfYaZ)}>
                <div className={classNames(projectcss.all, sty.freeBox__bd5Qw)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xmtcI)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__js3Z
                    )}
                  >
                    {"Automated Order Fulfillment:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___5KBwZ)}>
                <div className={classNames(projectcss.all, sty.freeBox__mmxsw)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yedB7)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $200",
                      value: args.slot70,
                      className: classNames(sty.slotTargetSlot70)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bHb5X)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___8QYw4
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uZmd9
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot71
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__iojnz)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ledgD)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gfbcs)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot72
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__cRi)}>
            <div className={classNames(projectcss.all, sty.freeBox___8Lsno)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__d6RbK)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__u8Zo)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__mhkvm)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lz5Kq)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hjGcz
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children25,
                      className: classNames(sty.slotTargetChildren25)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gNgt
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__fqLg9)}>
                <div className={classNames(projectcss.all, sty.freeBox__bdZen)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qqlya)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"24px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wtGjz
                    )}
                  >
                    {"Custom Branded Shipping Inserts:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__yrIy5)}>
                <div className={classNames(projectcss.all, sty.freeBox__z6Vd0)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fVyxw)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "Price: $400",
                      value: args.slot73,
                      className: classNames(sty.slotTargetSlot73)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pM7Al)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__yzPkk
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__efGjL
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot74
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__vNqt6)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___1CoGq)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5Pj26)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot75
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div className={classNames(projectcss.all, sty.freeBox__ogrp)}>
              <div className={classNames(projectcss.all, sty.freeBox__pzwvg)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4Jkwv)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__t8UH9)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                      />
                    ) : null}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tl878)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___21Hnr
                      )}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__f26Zq
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#636363" }}
                              >
                                {""}
                              </span>
                            </React.Fragment>
                          </div>
                        ) : null,
                        value: args.children19,
                        className: classNames(sty.slotTargetChildren19)
                      })}
                    </div>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9BLnQ
                        )}
                      >
                        {"Enter some text"}
                      </div>
                    ) : null}
                  </div>
                ) : null}
                <div
                  className={classNames(projectcss.all, sty.freeBox___1KSnA)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8El4)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__liomr)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___390TR
                      )}
                    >
                      {"$"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ec9Pk)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hDrqe)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__raSdZ)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "Price: $79",
                        value: args.slot55,
                        className: classNames(sty.slotTargetSlot55)
                      })}
                    </div>
                  </div>
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hbNCk)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___7CDE
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pxQv6
                            )}
                          >
                            {"\ud83d\udc49  FREE  \ud83d\udc48"}
                          </div>
                        ),
                        value: args.slot56
                      })}
                    </p.PlasmicLink>
                  </div>
                ) : null}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__j1Mtt)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qgdAp)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jFdZ)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents:
                          "Network and learn from some of the top dropshippers on the planet. ",
                        value: args.slot57
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div className={classNames(projectcss.all, sty.freeBox__tl5Mt)}>
              <div className={classNames(projectcss.all, sty.freeBox__imMgh)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ep9C5)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__q3IvB)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                      />
                    ) : null}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bpL4Q)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__egtIy)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0DYsT
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#636363" }}
                              >
                                {""}
                              </span>
                            </React.Fragment>
                          </div>
                        ) : null,
                        value: args.children11,
                        className: classNames(sty.slotTargetChildren11)
                      })}
                    </div>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7Dry8
                        )}
                      >
                        {"Enter some text"}
                      </div>
                    ) : null}
                  </div>
                ) : null}
                <div className={classNames(projectcss.all, sty.freeBox__mKoXy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pCj60)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__c2SVv)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jClT
                      )}
                    >
                      {""}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qLOwR)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sM1Eu)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uvc5E)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "Price: ~$500",
                        value: args.slot31,
                        className: classNames(sty.slotTargetSlot31)
                      })}
                    </div>
                  </div>
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6M6A8)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___21Wj
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eZl51
                            )}
                          >
                            {"\ud83d\udc49  FREE  \ud83d\udc48"}
                          </div>
                        ),
                        value: args.slot32
                      })}
                    </p.PlasmicLink>
                  </div>
                ) : null}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__w84Uc)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5SvgA)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__m5Ae0)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents:
                          "Network and learn from some of the top dropshippers on the planet. ",
                        value: args.slot33
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div className={classNames(projectcss.all, sty.freeBox__rLvvK)}>
              <div className={classNames(projectcss.all, sty.freeBox__mujpZ)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zWrX)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__lrOxh)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                      />
                    ) : null}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bYeo)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tN0X)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bxNwE
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#636363" }}
                              >
                                {""}
                              </span>
                            </React.Fragment>
                          </div>
                        ) : null,
                        value: args.children13,
                        className: classNames(sty.slotTargetChildren13)
                      })}
                    </div>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6S9On
                        )}
                      >
                        {"Enter some text"}
                      </div>
                    ) : null}
                  </div>
                ) : null}
                <div className={classNames(projectcss.all, sty.freeBox__fBuZw)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__du6Ya)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__krEdd)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jLCfZ
                      )}
                    >
                      {"Advanced TikTok & Facebook \nAds Training:"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___1ZoAf)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___46A4U)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gUfWc)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "Price: $9,997",
                        value: args.slot37,
                        className: classNames(sty.slotTargetSlot37)
                      })}
                    </div>
                  </div>
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___09JSf)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__oCJcW
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h2WnM
                            )}
                          >
                            {"\ud83d\udc49  FREE  \ud83d\udc48"}
                          </div>
                        ),
                        value: args.slot38
                      })}
                    </p.PlasmicLink>
                  </div>
                ) : null}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___212St)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5A9Ca)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zexf6)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents:
                          "Network and learn from some of the top dropshippers on the planet. ",
                        value: args.slot39
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__dFaIm)} />

          <div className={classNames(projectcss.all, sty.freeBox___4BCv)}>
            <div className={classNames(projectcss.all, sty.freeBox__qnIiL)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__j7QHm)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__du9GH)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___2J1Mu)}
                >
                  <div className={classNames(projectcss.all, sty.freeBox__toI)}>
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dpOvU
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children17,
                      className: classNames(sty.slotTargetChildren17)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ennll
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox___7DAIl)}>
                <div className={classNames(projectcss.all, sty.freeBox__ndyyj)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__zAfih)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jSsDo
                    )}
                  >
                    {"TOTAL PRICE:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___5FbZm)}>
                <div className={classNames(projectcss.all, sty.freeBox__otPcO)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__s6Xnx)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "$11,334",
                      value: args.slot49,
                      className: classNames(sty.slotTargetSlot49)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__vAi8X)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__zQr2A
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mUo9X
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot50
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__wJb)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__g8Gdk)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tQztY)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot51
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__xu8YX)}>
            <div className={classNames(projectcss.all, sty.freeBox__wGmFw)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__xiFt1)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rjvA1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null}
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__do4Gu)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bKMaF)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bm3ER
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#636363" }}
                            >
                              {""}
                            </span>
                          </React.Fragment>
                        </div>
                      ) : null,
                      value: args.children26,
                      className: classNames(sty.slotTargetChildren26)
                    })}
                  </div>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tp3L2
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  ) : null}
                </div>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__ypzM)}>
                <div className={classNames(projectcss.all, sty.freeBox__y2Mlp)}>
                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__y1L2Z)}
                      displayHeight={"24px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"24px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wztKw
                    )}
                  >
                    {"LIMITED-TIME OFFER:"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__rrbIy)}>
                <div className={classNames(projectcss.all, sty.freeBox__vhyXr)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bgTmF)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "$0",
                      value: args.slot76,
                      className: classNames(sty.slotTargetSlot76)
                    })}
                  </div>
                </div>
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__dglYp)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__v7W7B
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xraOc
                          )}
                        >
                          {"\ud83d\udc49  FREE  \ud83d\udc48"}
                        </div>
                      ),
                      value: args.slot77
                    })}
                  </p.PlasmicLink>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sQvom)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__a37BK)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__t5QXi)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents:
                        "Network and learn from some of the top dropshippers on the planet. ",
                      value: args.slot78
                    })}
                  </div>
                </div>
              ) : null}
            </div>
          </div>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div className={classNames(projectcss.all, sty.freeBox__v5Crj)}>
              <div className={classNames(projectcss.all, sty.freeBox__zupah)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xIaIh)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__zx6Hf)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                      />
                    ) : null}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__swUrn)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vkhwq)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__q67DO
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#636363" }}
                              >
                                {""}
                              </span>
                            </React.Fragment>
                          </div>
                        ) : null,
                        value: args.children18,
                        className: classNames(sty.slotTargetChildren18)
                      })}
                    </div>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sFzq
                        )}
                      >
                        {"Enter some text"}
                      </div>
                    ) : null}
                  </div>
                ) : null}
                <div className={classNames(projectcss.all, sty.freeBox__xslM)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1CIu)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___4Ip1Z)}
                        displayHeight={"24px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"24px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/zendrop/images/checkZendropsvg2.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oUyyC
                      )}
                    >
                      {"LIMITED-TIME OFFER:"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__mYtBf)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cZubY)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__v14R)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "$0",
                        value: args.slot52,
                        className: classNames(sty.slotTargetSlot52)
                      })}
                    </div>
                  </div>
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9W1J)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__plUj5
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vgRek
                            )}
                          >
                            {"\ud83d\udc49  FREE  \ud83d\udc48"}
                          </div>
                        ),
                        value: args.slot53
                      })}
                    </p.PlasmicLink>
                  </div>
                ) : null}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__uqTmq)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x8Vt8)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__m9DCk)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents:
                          "Network and learn from some of the top dropshippers on the planet. ",
                        value: args.slot54
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__sytS)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zdHrv
              )}
            >
              {"\ud83d\udc49  CLAIM OFFER  \ud83d\udc48"}
            </div>
          </div>
        </div>
      ) : null}
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "desktop", "mobile"],
  desktop: ["desktop"],
  mobile: ["mobile"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  desktop: "div";
  mobile: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicValueStack3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicValueStack3__VariantsArgs;
    args?: PlasmicValueStack3__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicValueStack3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicValueStack3__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicValueStack3__ArgProps,
          internalVariantPropNames: PlasmicValueStack3__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicValueStack3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicValueStack3";
  } else {
    func.displayName = `PlasmicValueStack3.${nodeName}`;
  }
  return func;
}

export const PlasmicValueStack3 = Object.assign(
  // Top-level PlasmicValueStack3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop: makeNodeComponent("desktop"),
    mobile: makeNodeComponent("mobile"),

    // Metadata about props expected for PlasmicValueStack3
    internalVariantProps: PlasmicValueStack3__VariantProps,
    internalArgProps: PlasmicValueStack3__ArgProps
  }
);

export default PlasmicValueStack3;
/* prettier-ignore-end */
